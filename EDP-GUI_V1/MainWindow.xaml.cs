using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Threading;




namespace EDP_GUI_V1
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        // New DsipatcherTimer
        DispatcherTimer dispatcherTimer = new DispatcherTimer();
        // New Stopwatch
        Stopwatch stopWatch = new Stopwatch();
        string currentTime = string.Empty;

        // String is created to store text.
        string name;

        // Create a queue 
        Queue my_queue = new Queue();

        public MainWindow()
        {
            InitializeComponent();

            dispatcherTimer.Tick += new EventHandler(dt_Tick);
            dispatcherTimer.Interval = new TimeSpan(0, 0, 0, 0, 1);

            // Adding elements in Queue 
            // Using Enqueue() method 
            my_queue.Enqueue("First");
            my_queue.Enqueue(2);
            my_queue.Enqueue("thrid");
            my_queue.Enqueue(4);
            

            // Accessing the elements 
            // of my_queue Queue 
            // Using foreach loop 
            foreach (var ele in my_queue)
            {
                // displays queue items within a List Box
                lbDataQ.Items.Add(ele);
            }
        }


        void dt_Tick(object sender, EventArgs e)
        {
            if (stopWatch.IsRunning)
            {
                // Get the elapsed time as a TimeSpan value.
                TimeSpan ts = stopWatch.Elapsed;

                // Format and display the TimeSpan value.
                currentTime = String.Format("{0:00}:{1:00}:{2:00}",
                ts.Minutes, ts.Seconds, ts.Milliseconds / 10);
                tbClock.Text = currentTime;
            }
        }

        private void btnStart_Click(object sender, RoutedEventArgs e)
        {
            stopWatch.Start();
            dispatcherTimer.Start();
        }

        private void btnStop_Click(object sender, RoutedEventArgs e)
        {
            if (stopWatch.IsRunning)
            {
                stopWatch.Stop();
            }
            lbTimes.Items.Add(currentTime);
        }

        private void btnReset_Click(object sender, RoutedEventArgs e)
        {
            stopWatch.Reset();
            tbClock.Text = "00:00:00";
        }

        private void txtName_KeyDown(object sender, KeyEventArgs e)
        {
            // Whats in the text box will be stored in a string.
            name = txtName.Text;

            // If the key Enter is pressed then tbName will 
            // display whatever is stored in name.
            if (e.Key == Key.Enter)
            {
                tbName.Text = name;
            }
        }

        private void btnRemove_Click(object sender, RoutedEventArgs e)
        {
            // Dequeue method will remove the first item within the list.
            lbDataQ.Items.Remove(my_queue.Dequeue());
        }

        private void btn_Colour_Click(object sender, RoutedEventArgs e)
        {
            // Calling method Colours();
            Colours();
        }   

        // New method
        public void Colours()
        {
            //New random
            Random r = new Random();

            // New Brush is created to paint an area with a solid color.
            Brush brush = new SolidColorBrush(Color.FromRgb((byte)r.Next(1, 255),
            (byte)r.Next(1, 255), (byte)r.Next(1, 233)));

            //Fills rectangle with random colour generated by brush.
            recColours.Fill = brush;
        }
    }
}
